for (i in 1:50) {
a <- rnorm(3,sd = 1)
val <- sequential(x, seq1[i], seq2[i], seq3[i])-0.002*i
values <- c(values, val)
}
tib2 <- tibble(rep(x, 50), rep(1:50, each = 1000), values)
colnames(tib2) <- c("x", "name", "value")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.06, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_discrete()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.06, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.06, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
install.packages("gganimate")
sequential <- function(x, a, b, c){
aa <- sin(x*7)*a/8
bb <- sin(x*5)*b/12
cc <- sin(x*11)*c/10
return(aa + bb + cc)
}
source('~/R/fun1.R', echo=TRUE)
library(gganimate)
seq1 <- seq(-0.2, 0.2, length.out = 20)
source('~/R/fun1.R', echo=TRUE)
tib2 <- tibble(rep(x, 20), rep(1:20, each = 500), values)
colnames(tib2) <- c("x", "name", "value")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.06, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
val <- sequential(x, seq1[i], seq2[i], seq3[i])-0.02*i
values <- c()
for (i in 1:20) {
a <- rnorm(3,sd = 1)
val <- sequential(x, seq1[i], seq2[i], seq3[i])-0.02*i
values <- c(values, val)
}
tib2 <- tibble(rep(x, 20), rep(1:20, each = 500), values)
colnames(tib2) <- c("x", "name", "value")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
values <- c()
for (i in 1:20) {
a <- rnorm(3,sd = 1)
val <- sequential(x, seq1[i], seq2[i], seq3[i])-0.01*i
values <- c(values, val)
}
tib2 <- tibble(rep(x, 20), rep(1:20, each = 500), values)
colnames(tib2) <- c("x", "name", "value")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
install.packages("gifski")
library(gganimate)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + enter_drift(name)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + animate(name)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_reveal(name)
library(ggplot2)
library(tibble)
library(dplyr)
library(tidyr)
library(gifski)
library(gganimate)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_reveal(name)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_reveal(name) +exit_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_components(name, enter_length = 10, exit_length = 10) +
exit_fade()
tib2$name
max(tib2$name)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_components(name, enter_length = 5, exit_length = 5) +
exit_fade()
class(tib2$name)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_layers(name,keep_layers = 5) +
exit_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_manual(name) +
exit_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 2) +
exit_fade()
install.packages("transformr")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 2) +
exit_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_manual(name, transition_length = 2) +
exit_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_manual(name) +
exit_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_manual(name) +
exit_fade() +  ease_aes(x = 'sine-out', y = 'sine-out')
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_manual(name) +
exit_fade() +  ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_wake(0.05, size = 3, alpha = TRUE, wrap = FALSE,
falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_manual(name) +
exit_fade() +  ease_aes(x = 'sine-out', y = 'sine-out') +
shadow_wake(1, size = 3, alpha = TRUE, wrap = FALSE,
falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name) +
exit_fade()
source('~/R/fun1.R', echo=TRUE)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 5, state_length = 1)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 5, state_length = 1) +
enter_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_line(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 5, state_length = 1) +
enter_fade()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_line(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 5, state_length = 1) +
ease_aes()
ggplot(tib2, aes(x, value + 0.5)) + geom_line(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 5, state_length = 1) +
ease_aes()
ggplot(tib2, aes(x, value + 0.5)) + geom_line(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 2, state_length = 0.5) +
ease_aes()
ggplot(tib2, aes(x, value + 0.5)) + geom_line(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes()
ggplot(tib2, aes(x, value + 0.5)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes()
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes()
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes('sine-in-out')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_line(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes('sine-in-out')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes('sine-in-out')
shadow_wake()
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes() + shadow_wake(0.05)
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes() + shadow_wake(1)
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes() + shadow_wake(0.1)
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 10, state_length = 0) +
ease_aes() + shadow_wake(1, size = 3, alpha = TRUE, wrap = FALSE,
falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 10, state_length = 1) +
ease_aes('sine-in-out') + shadow_wake(1, size = 3, alpha = TRUE, wrap = FALSE, falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 10, state_length = 1,
wrap= TRUE) +
ease_aes('sine-in-out') + shadow_wake(1, size = 3, alpha = TRUE, wrap = FALSE, falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 5, state_length = 1,
wrap= TRUE) +
ease_aes('sine-in-out') + shadow_wake(1, size = 3, alpha = TRUE, wrap = FALSE, falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 5, state_length = 1,
wrap = TRUE) +
ease_aes('sine-in-out') + shadow_wake(1, size = 3, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
colnames(tib2) <- c("x", "name", "value")
source('~/R/fun1.R', echo=TRUE)
seq1 <- seq(-0.3, 0.2, length.out = 50)
source('~/R/fun1.R', echo=TRUE)
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 5, state_length = 1,
wrap = TRUE) +
ease_aes('sine-in-out') + shadow_wake(1, size = 3, alpha = TRUE, wrap = FALSE, falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.3, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 5, state_length = 1,
wrap = TRUE) +
ease_aes('sine-in-out') + shadow_wake(0.1, size = 3, alpha = TRUE, wrap = FALSE, falloff = 'sine-in', exclude_phase = 'enter')
source('~/R/fun1.R', echo=TRUE)
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 5, state_length = 1,
wrap = TRUE) +
ease_aes('sine-in-out') + shadow_wake(0.4, size = 3, alpha = TRUE, wrap = FALSE, falloff = 'sine-in', exclude_phase = 'enter')
ggplot(tib2, aes(x, value + 0.5, fill = name)) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.01, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.03, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A")
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.03, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A", direction = -1)
seq1
sin1(seq(pi, length.out = 50))
sin(seq(pi, length.out = 50))
plot(sin(seq(pi, length.out = 50)))
plot(sin(seq(0,pi, length.out = 50)))
plot(sin(seq(0, 2*pi, length.out = 50)))
plot(sin(seq(0, 4*pi, length.out = 50)))
plot(sin(seq(0, 6*pi, length.out = 50)))
source('~/R/fun1.R', echo=TRUE)
plot(seq1)
seq1 <- sin(seq(0, 2*pi, length.out = 50))
source('~/R/fun1.R', echo=TRUE)
2/50*pi
source('~/R/fun1.R', echo=TRUE)
seq1 <- sin(seq(0, 2*pi, length.out = 50))
seq2 <- sin(seq(0, 2*pi, length.out = 50) + 1)
seq3 <-  sin(seq(0, 2*pi, length.out = 50) + 3)
cols <- c()
values <- c()
for (i in 1:50) {
a <- rnorm(3,sd = 1)
val <- sequential(x, seq1[i]/5, seq2[i]/5, seq3[i]/5)
values <- c(values, val)
}
tib2 <- tibble(rep(x, 50), rep(1:50, each = 100), values, rep(sin(seq(0, 2*pi, length.out = 50)), each = 100))
colnames(tib2) <- c("x", "name", "value", "cols")
ggplot(tib2, aes(x, value + 0.5, fill = cols)) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 5, state_length = 1,
wrap = TRUE) +
ease_aes('sine-in-out') + shadow_wake(0.2, size = 3, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
seq1 <- sin(seq(0, 2*pi, length.out = 50))
seq2 <- sin(seq(0, 2*pi, length.out = 50) + 1)
seq3 <-  sin(seq(0, 2*pi, length.out = 50) + 3)
cols <- c()
values <- c()
for (i in 1:50) {
a <- rnorm(3,sd = 1)
val <- sequential(x, seq1[i], seq2[i], seq3[i])
values <- c(values, val)
}
tib2 <- tibble(rep(x, 50), rep(1:50, each = 100), values, rep(sin(seq(0, 2*pi, length.out = 50)), each = 100))
colnames(tib2) <- c("x", "name", "value", "cols")
ggplot(tib2, aes(x, value + 0.5, fill = cols)) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A") + transition_states(name, transition_length = 5, state_length = 1,
wrap = TRUE) +
ease_aes('sine-in-out') + shadow_wake(0.2, size = 3, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
source('~/R/fun1.R', echo=TRUE)
ggplot(tib2, aes(x, value + 0.5, fill = factor(name))) + geom_area(alpha = 0.03, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_d( option = "A", end = 0.9)
ggplot(tib2, aes(x, value + 0.5, fill = cols)) + geom_area(alpha = 0.1, show.legend = F, position = position_identity()) +
coord_polar() + theme_void() + scale_fill_viridis_c( option = "A", end = 0.9) +
transition_states(name, transition_length = 5, state_length = 1, wrap = TRUE) +
ease_aes('sine-in-out') + shadow_wake(0.2, size = 3, alpha = TRUE, wrap = TRUE, falloff = 'sine-in', exclude_phase = 'enter')
library(tidyverse)
library(igraph)
library(ggplot2)
library(ggraph)
library(magrittr)
library(reshape2)
library(ggpubr)
getwd()
assorts = read_rds("assortativities_for_model.rds")
assorts[0]
assorts
dim(assorts[1])
dim(assorts[1][1])
assorts[1]
length(assorts[1])
dim(assorts[[1]][[1]])
join_list <- list()
for (j in 1:length(assortativities_original)) {
assortativities <- assortativities_original[[j]]
melt_list <- lapply(assortativities, function(x){
colnames(x) <- paste0("result.",1:dim(x)[2])
melt(x)
})
for (i in 1:length(rangee)) {
melt_list[[i]][,4] <- rangee[i]
}
joined_melt <- as_tibble(bind_rows(melt_list, .id = "surv"))
joined_melt$surv <- joined_melt$V4
join_list[[j]] <- joined_melt
}
turbojoin <- as_tibble(bind_rows(join_list, .id = "expan"))
turbojoin$expan <- rangee[as.numeric(turbojoin$expan)]
nlen <- length(V(graph))
turbojoin <- turbojoin %>% mutate(true_surv = ceiling(surv * nlen)/nlen)
turbojoin <- turbojoin %>% mutate(true_expan = ceiling(true_surv * nlen*expan)/(nlen * true_surv))
assortativities_original = assorts
join_list <- list()
for (j in 1:length(assortativities_original)) {
assortativities <- assortativities_original[[j]]
melt_list <- lapply(assortativities, function(x){
colnames(x) <- paste0("result.",1:dim(x)[2])
melt(x)
})
for (i in 1:length(rangee)) {
melt_list[[i]][,4] <- rangee[i]
}
joined_melt <- as_tibble(bind_rows(melt_list, .id = "surv"))
joined_melt$surv <- joined_melt$V4
join_list[[j]] <- joined_melt
}
rangee <- seq(0.0001,1,length.out = 30)^1.7
join_list <- list()
rangee <- seq(0.0001,1,length.out = 30)^1.7
for (j in 1:length(assortativities_original)) {
assortativities <- assortativities_original[[j]]
melt_list <- lapply(assortativities, function(x){
colnames(x) <- paste0("result.",1:dim(x)[2])
melt(x)
})
for (i in 1:length(rangee)) {
melt_list[[i]][,4] <- rangee[i]
}
joined_melt <- as_tibble(bind_rows(melt_list, .id = "surv"))
joined_melt$surv <- joined_melt$V4
join_list[[j]] <- joined_melt
}
dim(assortativities)
turbojoin <- as_tibble(bind_rows(join_list, .id = "expan"))
turbojoin$expan <- rangee[as.numeric(turbojoin$expan)]
nlen <- length(V(graph))
turbojoin <- turbojoin %>% mutate(true_surv = ceiling(surv * nlen)/nlen)
assortativities_original = assorts
graph <- read_rds("graph53.rds")
turbojoin <- as_tibble(bind_rows(join_list, .id = "expan"))
turbojoin$expan <- rangee[as.numeric(turbojoin$expan)]
nlen <- length(V(graph))
turbojoin <- turbojoin %>% mutate(true_surv = ceiling(surv * nlen)/nlen)
turbojoin <- turbojoin %>% mutate(true_expan = ceiling(true_surv * nlen*expan)/(nlen * true_surv))
dim(turbojoin)
melt_summary <- turbojoin %>% group_by(surv, expan , Var2) %>% summarise(mean = mean(value), sd = sd(value),
skew = moments::skewness(value), kurt = moments::kurtosis(value))
sum_summary <- melt_summary %>% group_by(surv, expan ) %>% summarise(mean = mean(mean), sd = mean(sd))
trueexpan_plt <- ggplot(melt_summary, aes(expan*surv, mean, col = as_factor(round(surv,8)))) + geom_point() +
geom_smooth(span = 0.3, level = 0.8)
trueexpan_plt
trueexpan_plt <- ggplot(melt_summary, aes(true_surv, mean, col = as_factor(round(surv,8)))) + geom_point() +
geom_smooth(span = 0.3, level = 0.8)
ggplot(melt_summary, aes(true_surv, mean, col = as_factor(round(surv,8)))) + geom_point() +
geom_smooth(span = 0.3, level = 0.8)
melt_summary
test_q <- turbojoin %>% group_by(expan, surv, Var2, true_surv, true_expan) %>%
summarise(quantiles = quantile(value, probs = q_probes ),
quant_range = q_probes, mean = mean(value), sd = sd(value),
skew = moments::skewness(value), kurt = moments::kurtosis(value)
)
r <- (seq(0.1,0.6,by = 0.1))^2
q_probes <- sort(c(r,0.5,1 - r))
test_q <- turbojoin %>% group_by(expan, surv, Var2, true_surv, true_expan) %>%
summarise(quantiles = quantile(value, probs = q_probes ),
quant_range = q_probes, mean = mean(value), sd = sd(value),
skew = moments::skewness(value), kurt = moments::kurtosis(value)
)
test_q
data <- test_q %>% pivot_wider(values_from = quantiles, names_from = quant_range, id_cols = -c(quantiles,quant_range)) %>% ungroup()
data
ggplot(melt_summary, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density() +
geom_smooth(span = 0.3, level = 0.8)
ggplot(data, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density() +
geom_smooth(span = 0.3, level = 0.8)
ggplot(data, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density()
ggplot(data, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density() + xlim(c(0.01,NULL))
ggplot(data, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density() + xlim(c(0.01,NA))
ggplot(data, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density2d(alpha(0.2)) + xlim(c(0.01,NA))
ggplot(data, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density2d(alpha=0.2) + xlim(c(0.01,NA))
ggplot(data, aes(true_surv, col = as_factor(round(surv,8)))) + geom_density(alpha=0.2) + xlim(c(0.01,NA))
data_df <- data %>% mutate(eras = log2((1 - true_surv)/(true_surv*true_expan) + 1)) %>%
select(-true_surv, -true_expan)
data_df
ggplot(data_df, aes(sd, col = as_factor(round(surv,8)))) + geom_density(alpha=0.2) + xlim(c(0.01,NA))
ggplot(data_df, aes(sd, col = as_factor(round(surv,8)))) + geom_density(alpha=0.2) + xlim(c(0.03,NA))
ggplot(data_df, aes(sd, col = as_factor(round(surv,8)))) + geom_histogram(alpha=0.2) + xlim(c(0.,NA))
ggplot(data_df, aes(sd, col = as_factor(round(surv,8)))) + geom_histogram(alpha=0.2)
ggplot(data_df, aes(kurt, fill = as_factor(round(surv,8)))) + geom_density(alpha=0.2) + xlim(c(0.,NA))
melt_summary
turbojoin
agr_data = turbojoin %>% group_by(expan, surv, Var2, true_surv, true_expan)
ggplot(agr_data, aes(value, fill = as_factor(round(surv,8)))) + geom_density(alpha=0.2)
ggplot(agr_data, aes(value, fill = as_factor(round(surv,8)))) + geom_density(alpha=0.2) + xlim(c(-2,NA))
ggplot(agr_data, aes(value, surv)))) + geom_density2d()
ggplot(agr_data, aes(value, surv)) + geom_density2d()
agr_data %>% filter(surv < 0.5)
agr_data %>% filter(surv < 0.5 & surv > 0.005 )
sub = agr_data %>% filter(surv < 0.5 & surv > 0.005 )
ggplot(sub, aes(value, surv)) + geom_density2d()
del agr_data
remove(agr_data)
remove(joined_melt)
gc()
gc()
ggplot(sub, aes(value, surv)) + geom_density2d() + xlim(c(-1))
ggplot(sub, aes(value, surv)) + geom_density2d() + xlim(c(-1,NA))
gc()
sub
sub$Var2
sub = agr_data %>% filter(surv < 0.5 & surv > 0.005 & Var2 == "result.3")
agr_data = turbojoin %>% group_by(expan, surv, Var2, true_surv, true_expan)
sub = agr_data %>% filter(surv < 0.5 & surv > 0.005 & Var2 == "result.3")
sub
ggplot(sub, aes(value, surv)) + geom_density2d() + xlim(c(-1, NA))
ggplot(sub, aes(value, surv)) + geom_bin2d() + xlim(c(-1, NA))
ggplot(sub, aes(value, surv)) + geom_bin2d(bins = 50) + xlim(c(-1, NA))
sub = agr_data %>% filter(surv < 0.01 & surv > 0.005 & Var2 == "result.3")
ggplot(sub, aes(value, surv)) + geom_bin2d(bins = 50) + xlim(c(-1, NA))
sub
sub = agr_data %>% filter(surv < 0.04 & surv > 0.005 & Var2 == "result.3")
sub
ggplot(sub, aes(value, expan)) + geom_bin2d(bins = 50) + xlim(c(-1, NA))
assorts = read_rds("assortativities_for_model.rds")
graph <- read_rds("graph53.rds")
assorts
length(assorts)
rangee <- seq(0.0001,1,length.out = 30)^1.7
assortativities_original = assorts
join_list <- list()
for (j in 1:length(assortativities_original)) {
assortativities <- assortativities_original[[j]]
melt_list <- lapply(assortativities, function(x){
colnames(x) <- paste0("result.",1:dim(x)[2])
melt(x)
})
for (i in 1:length(rangee)) {
melt_list[[i]][,4] <- rangee[i]
}
joined_melt <- as_tibble(bind_rows(melt_list, .id = "surv"))
joined_melt$surv <- joined_melt$V4
join_list[[j]] <- joined_melt
}
dim(join_list)
length(join_list)
length(join_list[1])
length(join_list[[1]])
join_list[[1]]
join_list[[1]]$surv
max(join_list[[1]]$surv)
min(join_list[[1]]$surv)
turbojoin <- as_tibble(bind_rows(join_list, .id = "expan"))
turbojoin$expan <- rangee[as.numeric(turbojoin$expan)]
nlen <- length(V(graph))
turbojoin <- turbojoin %>% mutate(true_surv = ceiling(surv * nlen)/nlen)
turbojoin <- turbojoin %>% mutate(true_expan = ceiling(true_surv * nlen*expan)/(nlen * true_surv))
turbojoin
turbojoin$expan == turbojoin$V4
sum(turbojoin$expan == turbojoin$V4)
(turbojoin$expan == turbojoin$V4)[700000:700010]
turbojoin$V4[700000:700010]
turbojoin$expan[700000:700010]
turbojoin
groups = c("A", "A", "B", "B", "C", "C")
vals = c(1, 1, 2, 2, 5, 7)
test_tibble = tibble(groups = groups, vals = vals)
test_tibble
test_tibble = test_tibble %>% group_by(groups)
standardGeneric()
test_tibble = test_tibble %>% group_by(groups) %>% mutate(normed = vals-mean(vals) )
test_tibble
turbojoin
turbojoin <- turbojoin %>% group_by(surv, expan , Var2)
turbojoin
normals <- turbojoin %>% mutate(mean = mean(value), sd = sd(value))
normals
unique(normals$mean)
10e-8
1e-8
normals <- normals %>% mutate(normalized = (value-mean)/(sd + 1e-8) )
sub = normals %>% filter(surv < 0.04 & surv > 0.005 & Var2 == "result.3")
ggplot(sub, aes(value, expan)) + geom_bin2d(bins = 50) + xlim(c(-1, NA))
ggplot(sub, aes(normalized, expan)) + geom_bin2d(bins = 50) + xlim(c(-1, NA))
ggplot(sub, aes(normalized, expan)) + geom_bin2d(bins = 50)
ggplot(sub, aes(normalized, expan)) + geom_bin2d(bins = c(10,100))
ggplot(sub, aes(normalized, expan)) + geom_bin2d(bins = c(100,10))
library(readr)
cell_parametres <- read_csv("~/studia/zaklad/EC_rainbow/test_voronoi/cell_parametres.csv")
View(cell_parametres)
cell_parametres
library(readr)
cell_parametres <- read_csv("~/studia/zaklad/EC_rainbow/test_voronoi/cell_parametres.csv",
col_names = FALSE)
View(cell_parametres)
library(ggplot2)
cell_parametres
colnames(cell_parametres) <- c("ID", "col", "x", "y", "area", "eccen")
cell_parametres$ID %<>% as.integer
library(magrittr)
cell_parametres$ID %<>% as.integer
cell_parametres$col %<>% as.factor
cell_parametres
ggplot(cell_parametres, aes(x, y, col = col, area = area))+ geom_point()
ggplot(cell_parametres, aes(x, y, col = col, size = area))+ geom_point()
ggplot(cell_parametres, aes(x, y, col = col, size = sqrt(area)))+ geom_point()
ggplot(cell_parametres, aes(x, y, col = col, size = log(area)))+ geom_point()
ggplot(cell_parametres, aes(x, y, col = col, size = log(area))) + geom_point() + scale_size(limits = c(NA,2))
ggplot(cell_parametres, aes(x, y, col = col, size = log(area)/2 )) + geom_point() + scale_size()
cell_parametres %>% ggplot(aes(x, y, col = col, size = log(area) )) + geom_point() + scale_size()
cell_parametres %>% ggplot(aes(x, y, col = col, size = area)) + geom_point() + scale_size()
cell_parametres <- read_csv("~/studia/zaklad/EC_rainbow/test_voronoi/cell_parametres.csv", col_names = FALSE)
colnames(cell_parametres) <- c("ID", "col", "y", "x", "area", "eccen")
cell_parametres$ID %<>% as.integer
cell_parametres$col %<>% as.factor
cell_parametres %>% ggplot(aes(x, y, col = col, size = area)) + geom_point() + scale_size()
cell_parametres <- read_csv("~/studia/zaklad/EC_rainbow/test_voronoi/cell_parametres.csv", col_names = FALSE)
colnames(cell_parametres) <- c("ID", "col", "y", "x", "area", "eccen")
cell_parametres$ID %<>% as.integer
cell_parametres$col %<>% as.factor
cell_parametres %>% ggplot(aes(x, -y, col = col, size = area)) + geom_point() + scale_size()
